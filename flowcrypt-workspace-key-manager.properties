# docs:
# https://flowcrypt.com/docs/technical/workspace-key-manager/latest/workspace-key-manager.html

### General ###

org.id=evaluation.org

api.hostname=0.0.0.0
api.port=32567
api.accept.hosts=wkm.evaluation.org,localhost:32567
api.https.enabled=true
api.https.key.file=wkm-https-cert.p12
api.https.key.password=password
api.cors.origins=https://*.google.com
api.url=https://wkm.evaluation.org
#api.error.format=detailed|short|id_only
api.error.format=id_only
api.openapi.enabled=false

# Truststore is optional - if you want to override default JRE truststore
# use this to verify KMIP server with custom cert
#truststore.file=wkm-dev-rootca.p12
#truststore.password=password


### Store ###

# the options for "key.source" field is: properties | stdin | kmip | pkcs11
# the only option for "test.vector.source" is: properties
# Required key format is 32 bytes (256 bits) of random data encoded as base64
# Generate master secrets, and test vector by running: --create-master-key (uses Java SecureRandom, or KMS over KMIP)

store.type=MasterKeyStore
store.master.derivation.scheme=sha256-aes-ecb
store.master.key.source=properties
# enter "--create-master-key" output (Master Key) here to set Master Key in properties file
store.master.key.value=
store.test.vector.source=properties
# enter "--create-master-key" output (Test Vector) here either way. This is used to cross-check entered Key
store.test.vector.value=

# master key stored in secure key storage over KMIP protocol (eg Gemalto Safenet KeySecure)
# remember to also set `truststore.file` above if KMIP server uses certs with custom CA
#store.kmip.hostname=localhost
#store.kmip.port=5696
#store.kmip.key.file=localhost.p12
#store.kmip.key.password=password
#store.kmip.master.key.name=flowcrypt-workspace-km-master-key
#store.kmip.master.key.identifier=

# master key stored over PKCS#11 protocol (Fortanix SDKMS, Equinix SmartKey or any compatible HSM)
#store.pkcs11.module=./vendor-pkcs11.so
#store.pkcs11.pin=file://vendor-pkcs11.cfg


### Logger ###

# comma separated list - can have any combination of StdoutLogger, FileLogger, StackdriverLogger, SplunkHttpLogger
logger.types=StdoutLogger
# trace, debug, info, warn, error
logger.default.level=info
#logger.stdout.include.datetime=true
#logger.file.folder=/var/logs
#logger.file.history.size=14
#logger.file.history.compression=false
#logger.file.include.datetime=true
#logger.stackdriver.credentials.file=/etc/google/auth/application_default_credentials.json
#logger.splunk.url=https://splunk-instance:8088
#logger.splunk.token=327bfa46-...
#logger.splunk.disable.certificate.validation=true


### Authentication ###

# Use defaults provided below if you intend to use Google as your IdP. In that case, set up an oAuth Screen
#    on Google Developer Console, and provide oAuth Client ID in audience field.
# Else change issuer and jwks to your custom company IdP.
auth.enduser.type=OidcAuthenticator
auth.enduser.idps=default
auth.enduser.default.issuer=https://accounts.google.com
auth.enduser.default.audience=SET_YOUR_GOOGLE_OAUTH_CLIENT_ID_HERE
auth.enduser.default.jwks=https://www.googleapis.com/oauth2/v3/certs

auth.admin.type=OidcAuthenticator
auth.admin.idps=default
auth.admin.default.issuer=https://accounts.google.com
auth.admin.default.audience=SET_YOUR_GOOGLE_OAUTH_CLIENT_ID_HERE
auth.admin.default.jwks=https://www.googleapis.com/oauth2/v3/certs

### Google Workspace Products ###
google.workspace.products=drive,meet,calendar,gmail
google.workspace.privileged.users=
google.workspace.kacl.account.email=

### Google Workspace Authorization (Docs & Drive) ###
google.workspace.drive.product.family=default
google.workspace.drive.issuer=gsuitecse-tokenissuer-drive@system.gserviceaccount.com
google.workspace.drive.audience=cse-authorization
google.workspace.drive.jwks=https://www.googleapis.com/service_accounts/v1/jwk/gsuitecse-tokenissuer-drive@system.gserviceaccount.com

### Google Workspace Authorization (Meet) ###
google.workspace.meet.product.family=default
google.workspace.meet.issuer=gsuitecse-tokenissuer-meet@system.gserviceaccount.com
google.workspace.meet.audience=cse-authorization
google.workspace.meet.jwks=https://www.googleapis.com/service_accounts/v1/jwk/gsuitecse-tokenissuer-meet@system.gserviceaccount.com

### Google Workspace Authorization (Calendar) ###
google.workspace.calendar.product.family=default
google.workspace.calendar.issuer=gsuitecse-tokenissuer-calendar@system.gserviceaccount.com
google.workspace.calendar.audience=cse-authorization
google.workspace.calendar.jwks=https://www.googleapis.com/service_accounts/v1/jwk/gsuitecse-tokenissuer-calendar@system.gserviceaccount.com

### Google Workspace Authorization (Gmail) ###
google.workspace.gmail.product.family=gmail
google.workspace.gmail.issuer=gsuitecse-tokenissuer-gmail@system.gserviceaccount.com
google.workspace.gmail.audience=cse-authorization
google.workspace.gmail.jwks=https://www.googleapis.com/service_accounts/v1/jwk/gsuitecse-tokenissuer-gmail@system.gserviceaccount.com

### ACL ###

acl.type=NoThirdPartyAcl
